),
开具金额=if_else(一级任务类别=='代理',
开具金额-Ag.外包成本
)
)%>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(开票日期)) %>%
summarise(
开具金额=sum(开具金额)
)
#开票额统计
invoice.dt <-
dt.all %>%
mutate(
tag=if_else((是否作废重开票=='是'|作废=='是'|开具金额<0),1,0)
) %>%
dplyr::filter(
tag%in%c(0,NA),
A.合同签订日期>as.Date('2020-06-30'),
time_filter(ymd(开票日期))==time_filter(time_span),
year(ymd(开票日期))==year(time_span)#限定统计周期所在年份
) %>%
mutate(
开具金额=if_else(一级任务类别=='大综合',
(S.合同金额-Ag.外包成本)*回款金额/S.合同金额,开具金额
),
开具金额=if_else(一级任务类别=='代理',
开具金额-Ag.外包成本,开具金额
)
)%>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(开票日期)) %>%
summarise(
开具金额=sum(开具金额)
)
#回款额统计
payment.dt <-
dt.all %>%
dplyr::filter(
time_filter(回款日期)==time_filter(time_span),year(ymd(回款日期))==year(time_span)
) %>%
mutate(
回款金额=if_else(一级任务类别=='大综合',
(S.合同金额-Ag.外包成本)*回款金额/S.合同金额,回款金额
),
回款金额=if_else(一级任务类别=='代理',
回款金额-Ag.外包成本,回款金额
)
) %>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(回款日期)) %>%
summarise(
回款金额=sum(回款金额,na.rm = T)
)
View(payment.dt)
#预付款额统计
##预付款消费信息以tb字段为准，须以S.销售姓名修改销售姓名和销售类别
advance.dt <-
dt.all %>%
dplyr::filter(
一级任务类别%in%c('预付款消费','预付款消费代理'),
time_filter(A.合同签订日期)==time_filter(time_span),
year(A.合同签订日期)==year(time_span)
) %>%
mutate(
销售姓名=S.销售姓名,
销售类别=fct_collapse(销售姓名,
刘艳=c('刘艳'),
大客户=c('大客户','周冰'),
华北大客户=c('华北大客户','杨宝兴','樊伟','贾东东'),
西南大客户=c('西南大客户','张义凯'),
other_level=c('销售专员')
)
) %>%
distinct(任务ID) %>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(A.合同签订日期)) %>%
summarise(
消费金额=sum(S.消费金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
?distinct
#预付款额统计
##预付款消费信息以tb字段为准，须以S.销售姓名修改销售姓名和销售类别
advance.dt <-
dt.all %>%
dplyr::filter(
一级任务类别%in%c('预付款消费','预付款消费代理'),
time_filter(A.合同签订日期)==time_filter(time_span),
year(A.合同签订日期)==year(time_span)
) %>%
mutate(
销售姓名=S.销售姓名,
销售类别=fct_collapse(销售姓名,
刘艳=c('刘艳'),
大客户=c('大客户','周冰'),
华北大客户=c('华北大客户','杨宝兴','樊伟','贾东东'),
西南大客户=c('西南大客户','张义凯'),
other_level=c('销售专员')
)
) %>%
distinct(任务ID,.keep_all=T) %>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(A.合同签订日期)) %>%
summarise(
消费金额=sum(S.消费金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
View(advance.dt)
dt.fin <- purrr::reduce(list(invoice.dt,payment.dt,advance.dt),full_join)
View(dt.fin)
dt.fin <- purrr::reduce(list(invoice.dt,payment.dt,advance.dt),full_join) %>%
mutate(
across(matches('金额|成本'),replace_na,replace=0),
开票提成=pmap(list(销售类别,一级任务类别,开具金额),
function(销售类别,一级任务类别,开具金额){
p <- 0
if(销售类别=='销售专员'){
p <- switch(一级任务类别,
'常规业务'= 开具金额*0.03,
'预付款'= 开具金额*0,
'预付款消费' = 消费金额*0.04,
'预付款消费代理'=消费金额*0.018*0.04,
'代理'=开具金额*0.018*0.03,
'其他'=开具金额*0,
'大综合'=开具金额*0.018*0.06
)
}else if(销售类别=='刘艳'){
p <- switch(一级任务类别,
'常规业务'= 开具金额*0.02,
'预付款'= 开具金额*0,
'预付款消费' = 消费金额*0.03,
'预付款消费代理'=消费金额*0.018*0.02,
'代理'=开具金额*0.018*0.02,
'其他'=开具金额*0,
'大综合'=开具金额*0.018*0.04
)
}else{#各种大客户
p <- 开具金额
}
p
}),
回款提成=pmap(list(销售类别,一级任务类别,回款金额),
function(销售类别,一级任务类别,回款金额){
p <- 0
if(销售类别=='销售专员'){
p <- switch(一级任务类别,
常规业务=回款金额*0.03,
预付款=回款金额*0.03,
预付款消费=消费金额*0,
大综合=回款金额*0.018*0.06,
预付款消费代理=消费金额*0,
代理=回款金额*1.8*0.03,
其他=回款金额*0)
}else if(销售类别=='刘艳'){
p <- switch(一级任务类别,
常规业务=回款金额*0.02,
预付款=回款金额*0.02,
预付款消费=消费金额*0,
大综合=回款金额*0.018*0.04,
预付款消费代理=消费金额*0,
代理=回款金额*1.8*0.02,
其他=回款金额*0)
}else{
p <- 回款金额
}
p
})
)
output <-
list(
'汇总结果'=dt.fin,
'原始数据'=dt.all
)
write.xlsx(output,'4月统计结果.xlsx')
library(openxlsx)
write.xlsx(output,'4月统计结果.xlsx')
View(dt.fin)
tb.data <-
tb_raw %>%
mutate(
任务ID=if_else(str_detect(任务ID,'ds'),str_match(标题,regex('A-FW-\\d+',ignore_case = T)),任务ID),
Ag.外包成本=map2_dbl(Ag.外包成本,Ag.整体实验固定费用,function(x,y){
sum(as.numeric(x),as.numeric(y),na.rm = T)
}),#Ag.外包成本和Ag.整体实验固定费用都属于外包成本，仅发生过名称改变
link=tolower(str_replace_all(任务ID,'[ -]',''))#统一link格式
) %>%
dplyr::filter(任务类型=='销售序列模板') %>%
select(标题,任务ID,A.合同签订日期,Ag.外包成本,A.业务类别,S.销售姓名,
S.客户姓名,S.合同金额,S.消费金额,F.未回款,F.已开票,link) %>%
separate(A.业务类别,into = c('一级任务类别','二级任务类别'),sep = ' / ') %>%
mutate(
一级任务类别=if_else(一级任务类别=='预付款消费'&二级任务类别=='代理','预付款消费代理',一级任务类别),#将二级任务为代理的预付款消费任务改为’预付款消费代理‘
across(matches('成本|金额'),as.numeric)
)
#台账数据整合
dt.all <-
ledger_raw %>%
mutate(
link=tolower(str_replace_all(合同号,'[ -]',''))
) %>%
full_join(tb.data) %>%
mutate(
销售类别=fct_collapse(销售姓名,
刘艳=c('刘艳'),
大客户=c('大客户','周冰'),
华北大客户=c('华北大客户','杨宝兴','樊伟','贾东东'),
西南大客户=c('西南大客户','张义凯'),
other_level=c('销售专员')
)
)
%>%
drop_na(A.合同签订日期)#去除与签订合同无关的项目(如售后任务)
#开票额统计
invoice.dt <-
dt.all %>%
mutate(
tag=if_else((是否作废重开票=='是'|作废=='是'|开具金额<0),1,0)
) %>%
dplyr::filter(
tag%in%c(0,NA),
A.合同签订日期>as.Date('2020-06-30'),
time_filter(ymd(开票日期))==time_filter(time_span),
year(ymd(开票日期))==year(time_span)#限定统计周期所在年份
) %>%
mutate(#大综合和代理的提成以不同基数计算，此处其统一为 开具金额 字段下方便计算
开具金额=if_else(一级任务类别=='大综合',
(S.合同金额-Ag.外包成本)*回款金额/S.合同金额,开具金额
),
开具金额=if_else(一级任务类别=='代理',
开具金额-Ag.外包成本,开具金额
)
)%>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(开票日期)) %>%
summarise(
开具金额=sum(开具金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
#回款额统计
payment.dt <-
dt.all %>%
dplyr::filter(
time_filter(回款日期)==time_filter(time_span),year(ymd(回款日期))==year(time_span)
) %>%
mutate(
回款金额=if_else(一级任务类别=='大综合',
(S.合同金额-Ag.外包成本)*回款金额/S.合同金额,回款金额
),
回款金额=if_else(一级任务类别=='代理',
回款金额-Ag.外包成本,回款金额
)
) %>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(回款日期)) %>%
summarise(
回款金额=sum(回款金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
#预付款额统计
##预付款消费信息以tb字段为准，须以S.销售姓名修改销售姓名和销售类别
advance.dt <-
dt.all %>%
dplyr::filter(
一级任务类别%in%c('预付款消费','预付款消费代理'),
time_filter(A.合同签订日期)==time_filter(time_span),
year(A.合同签订日期)==year(time_span)
) %>%
mutate(
销售姓名=S.销售姓名,
销售类别=fct_collapse(销售姓名,
刘艳=c('刘艳'),
大客户=c('大客户','周冰'),
华北大客户=c('华北大客户','杨宝兴','樊伟','贾东东'),
西南大客户=c('西南大客户','张义凯'),
other_level=c('销售专员')
)
) %>%
distinct(任务ID,.keep_all=T) %>% #台账合并tb数据时会造成TB字段重复
group_by(一级任务类别,销售类别,销售姓名,time_filter(A.合同签订日期)) %>%
summarise(
消费金额=sum(S.消费金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
dt.fin <- purrr::reduce(list(invoice.dt,payment.dt,advance.dt),full_join) %>%
mutate(
across(matches('金额|成本'),replace_na,replace=0),
开票提成=pmap(list(销售类别,一级任务类别,开具金额),
function(销售类别,一级任务类别,开具金额){
p <- 0
if(销售类别=='销售专员'){
p <- switch(一级任务类别,
'常规业务'= 开具金额*0.03,
'预付款'= 开具金额*0,
'预付款消费' = 消费金额*0.04,
'预付款消费代理'=消费金额*1.8*0.04,
'代理'=开具金额*1.8*0.03,
'其他'=开具金额*0,
'大综合'=开具金额*1.8*0.06
)
}else if(销售类别=='刘艳'){
p <- switch(一级任务类别,
'常规业务'= 开具金额*0.02,
'预付款'= 开具金额*0,
'预付款消费' = 消费金额*0.03,
'预付款消费代理'=消费金额*1.8*0.02,
'代理'=开具金额*1.8*0.02,
'其他'=开具金额*0,
'大综合'=开具金额*1.8*0.04
)
}else{#各种大客户
p <- 开具金额
}
p
}),
回款提成=pmap(list(销售类别,一级任务类别,回款金额),
function(销售类别,一级任务类别,回款金额){
p <- 0
if(销售类别=='销售专员'){
p <- switch(一级任务类别,
常规业务=回款金额*0.03,
预付款=回款金额*0.03,
预付款消费=消费金额*0,
大综合=回款金额*1.8*0.06,
预付款消费代理=消费金额*0,
代理=回款金额*1.8*0.03,
其他=回款金额*0)
}else if(销售类别=='刘艳'){
p <- switch(一级任务类别,
常规业务=回款金额*0.02,
预付款=回款金额*0.02,
预付款消费=消费金额*0,
大综合=回款金额*1.8*0.04,
预付款消费代理=消费金额*0,
代理=回款金额*1.8*0.02,
其他=回款金额*0)
}else{
p <- 回款金额
}
p
})
)
output <-
list(
'汇总结果'=dt.fin,
'原始数据'=dt.all
)
#tb数据清洗
tb.data <-
tb_raw %>%
mutate(
任务ID=if_else(str_detect(任务ID,'ds'),str_match(标题,regex('A-FW-\\d+',ignore_case = T)),任务ID),
Ag.外包成本=map2_dbl(Ag.外包成本,Ag.整体实验固定费用,function(x,y){
sum(as.numeric(x),as.numeric(y),na.rm = T)
}),#Ag.外包成本和Ag.整体实验固定费用都属于外包成本，仅发生过名称改变
link=tolower(str_replace_all(任务ID,'[ -]',''))#统一link格式
) %>%
dplyr::filter(任务类型=='销售序列模板') %>%
select(标题,任务ID,A.合同签订日期,Ag.外包成本,A.业务类别,S.销售姓名,
S.客户姓名,S.合同金额,S.消费金额,F.未回款,F.已开票,link) %>%
separate(A.业务类别,into = c('一级任务类别','二级任务类别'),sep = ' / ') %>%
mutate(
一级任务类别=if_else(一级任务类别=='预付款消费'&二级任务类别=='代理','预付款消费代理',一级任务类别),#将二级任务为代理的预付款消费任务改为’预付款消费代理‘
across(matches('成本|金额'),as.numeric)
)
%>%
drop_na(A.合同签订日期)#去除与签订合同无关的项目(如售后任务)
#台账数据整合
dt.all <-
ledger_raw %>%
mutate(
link=tolower(str_replace_all(合同号,'[ -]',''))
) %>%
full_join(tb.data) %>%
mutate(
销售类别=fct_collapse(销售姓名,
刘艳=c('刘艳'),
大客户=c('大客户','周冰'),
华北大客户=c('华北大客户','杨宝兴','樊伟','贾东东'),
西南大客户=c('西南大客户','张义凯'),
other_level=c('销售专员')
)
) %>%
drop_na(A.合同签订日期)#去除与签订合同无关的项目(如售后任务)
#开票额统计
invoice.dt <-
dt.all %>%
mutate(
tag=if_else((是否作废重开票=='是'|作废=='是'|开具金额<0),1,0)
) %>%
dplyr::filter(
tag%in%c(0,NA),
A.合同签订日期>as.Date('2020-06-30'),
time_filter(ymd(开票日期))==time_filter(time_span),
year(ymd(开票日期))==year(time_span)#限定统计周期所在年份
) %>%
mutate(#大综合和代理的提成以不同基数计算，此处其统一为 开具金额 字段下方便计算
开具金额=if_else(一级任务类别=='大综合',
(S.合同金额-Ag.外包成本)*回款金额/S.合同金额,开具金额
),
开具金额=if_else(一级任务类别=='代理',
开具金额-Ag.外包成本,开具金额
)
)%>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(开票日期)) %>%
summarise(
开具金额=sum(开具金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
#回款额统计
payment.dt <-
dt.all %>%
dplyr::filter(
time_filter(回款日期)==time_filter(time_span),year(ymd(回款日期))==year(time_span)
) %>%
mutate(
回款金额=if_else(一级任务类别=='大综合',
(S.合同金额-Ag.外包成本)*回款金额/S.合同金额,回款金额
),
回款金额=if_else(一级任务类别=='代理',
回款金额-Ag.外包成本,回款金额
)
) %>%
group_by(一级任务类别,销售类别,销售姓名,time_filter(回款日期)) %>%
summarise(
回款金额=sum(回款金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
#预付款额统计
##预付款消费信息以tb字段为准，须以S.销售姓名修改销售姓名和销售类别
advance.dt <-
dt.all %>%
dplyr::filter(
一级任务类别%in%c('预付款消费','预付款消费代理'),
time_filter(A.合同签订日期)==time_filter(time_span),
year(A.合同签订日期)==year(time_span)
) %>%
mutate(
销售姓名=S.销售姓名,
销售类别=fct_collapse(销售姓名,
刘艳=c('刘艳'),
大客户=c('大客户','周冰'),
华北大客户=c('华北大客户','杨宝兴','樊伟','贾东东'),
西南大客户=c('西南大客户','张义凯'),
other_level=c('销售专员')
)
) %>%
distinct(任务ID,.keep_all=T) %>% #台账合并tb数据时会造成TB字段重复
group_by(一级任务类别,销售类别,销售姓名,time_filter(A.合同签订日期)) %>%
summarise(
消费金额=sum(S.消费金额,na.rm = T),
代理成本=sum(Ag.外包成本,na.rm = T)
)
dt.fin <- purrr::reduce(list(invoice.dt,payment.dt,advance.dt),full_join) %>%
mutate(
across(matches('金额|成本'),replace_na,replace=0),
开票提成=pmap(list(销售类别,一级任务类别,开具金额),
function(销售类别,一级任务类别,开具金额){
p <- 0
if(销售类别=='销售专员'){
p <- switch(一级任务类别,
'常规业务'= 开具金额*0.03,
'预付款'= 开具金额*0,
'预付款消费' = 消费金额*0.04,
'预付款消费代理'=消费金额*1.8*0.04,
'代理'=开具金额*1.8*0.03,
'其他'=开具金额*0,
'大综合'=开具金额*1.8*0.06
)
}else if(销售类别=='刘艳'){
p <- switch(一级任务类别,
'常规业务'= 开具金额*0.02,
'预付款'= 开具金额*0,
'预付款消费' = 消费金额*0.03,
'预付款消费代理'=消费金额*1.8*0.02,
'代理'=开具金额*1.8*0.02,
'其他'=开具金额*0,
'大综合'=开具金额*1.8*0.04
)
}else{#各种大客户
p <- 开具金额
}
p
}),
回款提成=pmap(list(销售类别,一级任务类别,回款金额),
function(销售类别,一级任务类别,回款金额){
p <- 0
if(销售类别=='销售专员'){
p <- switch(一级任务类别,
常规业务=回款金额*0.03,
预付款=回款金额*0.03,
预付款消费=消费金额*0,
大综合=回款金额*1.8*0.06,
预付款消费代理=消费金额*0,
代理=回款金额*1.8*0.03,
其他=回款金额*0)
}else if(销售类别=='刘艳'){
p <- switch(一级任务类别,
常规业务=回款金额*0.02,
预付款=回款金额*0.02,
预付款消费=消费金额*0,
大综合=回款金额*1.8*0.04,
预付款消费代理=消费金额*0,
代理=回款金额*1.8*0.02,
其他=回款金额*0)
}else{
p <- 回款金额
}
p
})
)
output <-
list(
'汇总结果'=dt.fin,
'原始数据'=dt.all
)
View(dt.fin)
write.xlsx(output,'4月统计结果.xlsx')
save.image("~/Desktop/Rbio/std_report_v3/test_env/test_env_commission.RData")
